"TABLE_05",
"TABLE_06",
"TABLE_07",
"TABLE_08",
"TABLE_09",
"TABLE_10",
"TABLE_11"
),
inline = TRUE
),
fluidRow(
box(
width = 12,
class = "custom-box",
tabBox(
width = 12,
tabPanel(
title = h3("Data"),
DT::DTOutput("Out2023Basic")
),
tabPanel(
title = h3("Analysis"),
rpivotTableOutput("Pivot2023Basic")
)
)
)
)
)
),
# Page for PakPC 2017 dataset selection
tabItem(tabName = "pakpc2017",
h3("Pakistan Population Census 2017"),
radioButtons(
"dataset2017",
h4("Choose Dataset"),
choices = list(
"PakPC2017Pak",
"PakPC2017Pakistan",
"PakPC2017Punjab",
"PakPC2017Sindh",
"PakPC2017KPK",
"PakPC2017Balochistan",
"PakPC2017FATA",
"PakPC2017Islamabad",
"PakPC2017Tehsil",
"PakPC2017City10"
),
inline = TRUE
),
fluidRow(
box(
width = 12,
class = "custom-box",
tabBox(
width = 12,
tabPanel(
title = h3("Data"),
DT::DTOutput("Out2017")
),
tabPanel(
title = h3("Analysis"),
rpivotTableOutput("Pivot2017")
)
)
)
)
)
)
)
server <- function(input, output, session) {
output$OutPakPC2023Pak <-
renderDT({
DT::datatable(
data    = PakPC2023Pak,
caption = htmltools::tags$caption(
style    = 'caption-side: top; text-align: center;',
'Table 1: ',
htmltools::em('Number of households, Population & Average Annual Population Growth Rate by Region & Area')
)
) %>%
formatCurrency(
columns  = c('Households', 'Pop2023', 'Pop2017'),
currency = "",
interval = 3,
mark     = ",",
digits   = 0
) %>%
formatCurrency(
columns  = c('AHS', 'GR'),
currency = "",
digits   = 2
)
})
output$OutPakPC2023PakDiv <-
renderDT({
DT::datatable(
data  = PakPC2023PakDiv
, caption = htmltools::tags$caption(
style = 'caption-side: top; text-align: center;',
'Table 2: ', htmltools::em('Number of households, Population & Average Annual Population Growth Rate by Region & Division')
)
) %>%
formatCurrency(
columns  = c('Households', 'Pop2023', 'Pop2017')
, currency = ""
, interval = 3
, mark     = ","
, digits   = 0
) %>%
formatCurrency(
columns  = c('AHS', 'GR')
, currency = ""
, digits   = 2
)
})
output$OutPakPC2023PakDist <-
renderDT({
DT::datatable(
data  = PakPC2023PakDist
, caption = htmltools::tags$caption(
style = 'caption-side: top; text-align: center;',
'Table 3: ', htmltools::em('Number of households, Population & Average Annual Population Growth Rate by Region & District')
)
) %>%
formatCurrency(
columns  = c('Households', 'Pop2023', 'Pop2017')
, currency = ""
, interval = 3
, mark     = ","
, digits   = 0
) %>%
formatCurrency(
columns  = c('AHS', 'GR')
, currency = ""
, digits   = 2
)
})
Data2023Basic <- reactive({
switch(input$dataset2023basic,
"TABLE_01"             = PakPC2023::TABLE_01 ,
"TABLE_02"             = PakPC2023::TABLE_02 ,
"TABLE_03"            = PakPC2023::TABLE_03 ,
"TABLE_04"            = PakPC2023::TABLE_04 ,
"TABLE_05"            = PakPC2023::TABLE_05 ,
"TABLE_06"            = PakPC2023::TABLE_06 ,
"TABLE_07"            = PakPC2023::TABLE_07 ,
"TABLE_08"            = PakPC2023::TABLE_08 ,
"TABLE_09"            = PakPC2023::TABLE_09 ,
"TABLE_10"            = PakPC2023::TABLE_10 ,
"TABLE_11"            = PakPC2023::TABLE_11 ,
)
})
output$Out2023Basic <-
renderDT({
DT::datatable(
data  = Data2023Basic()
, filter = c("none", "bottom", "top")[3]
, options = list(pageLength = 50, autoWidth = TRUE)
)
})
Data2017 <- reactive({
switch(input$dataset2017,
"PakPC2017Pak"         = PakPC2017::PakPC2017Pak,
"PakPC2017Pakistan"    = PakPC2017::PakPC2017Pakistan,
"PakPC2017Punjab"      = PakPC2017::PakPC2017Punjab,
"PakPC2017Sindh"       = PakPC2017::PakPC2017Sindh,
"PakPC2017KPK"         = PakPC2017::PakPC2017KPK,
"PakPC2017Balochistan" = PakPC2017::PakPC2017Balochistan,
"PakPC2017FATA"        = PakPC2017::PakPC2017FATA,
"PakPC2017Islamabad"   = PakPC2017::PakPC2017Islamabad,
"PakPC2017Tehsil"      = PakPC2017::PakPC2017Tehsil,
"PakPC2017City10"      = PakPC2017::PakPC2017City10
)
})
output$Out2017 <-
renderDT({
DT::datatable(
data  = Data2017()
, filter = c("none", "bottom", "top")[3]
, options = list(pageLength = 50, autoWidth = TRUE)
)
})
output$Pivot2017 <- renderRpivotTable({
rpivotTable(
data           = Data2017(),
rows           = c("AdminUnits"),
cols           = c("ResStatus"),
aggregatorName = "Sum",
vals           = "Pop2017",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
}
shinyApp(ui = ui, server = server)
library(collapse)
library(DT)
library(magrittr)
library(PakPC2017)
library(PakPC2023)
library(rpivotTable)
library(shiny)
library(shinyBS)
library(shinydashboard)
ui <-
dashboardPage(
dashboardHeader(title = "Pakistan Population Census"),
# Sidebar for dataset selection and navigation between multiple pages
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "Home", icon = icon("home"), badgeLabel = "Home", badgeColor = "green"),
menuItem("Introduction", tabName = "Intro", icon = icon("computer"), badgeLabel = "Info", badgeColor = "green"),
menuItem("PakPC 2023", icon = icon("database"), startExpanded = TRUE,
menuSubItem("Basic", tabName = "PakPC2023Basic", icon = icon("person-arrow-up-from-line"))
),
menuItem("PakPC 2017", tabName = "pakpc2017", icon = icon("database"), badgeLabel = "2017", badgeColor = "blue")
)
, disable   = c(TRUE, FALSE)[2]
, width     = NULL
, collapsed = c(TRUE, FALSE)[1]
),
dashboardBody(
tags$head(
tags$style(
"
div {
text-align: justify;
text-justify: inter-word;
}
* {
font-family: Latin Modern Roman;
font-size: 16px;
font-style: italic;
font-weight: bold;
}
h1 {
font-family: Latin Modern Roman;
font-size: 50px;
font-style: italic;
font-weight: bold;
}
h2 {
font-family: Latin Modern Roman;
font-size: 30px;
font-style: italic;
font-weight: bold;
}
h3 {
font-family: Latin Modern Roman;
font-size: 25px;
font-style: italic;
font-weight: bold;
}
h4 {
font-family: Latin Modern Roman;
font-size: 20px;
font-style: italic;
font-weight: bold;
}
h5 {
font-family: Latin Modern Roman;
font-size: 15px;
font-style: italic;
font-weight: bold;
}
h6 {
font-family: Latin Modern Roman;
font-size: 10px;
font-style: italic;
font-weight: bold;
}
",
HTML("
.custom-box {
height: 600px;  /* Increase box height */
overflow-y: scroll;  /* Enable vertical scrolling */
}
.custom-pivot-table {
width: 100%;  /* Take full width of the page */
height: 5000px;  /* Adjust height of the pivot table */
}
")
)),
tabItems(
# Home Page
tabItem(
tabName = "Home",
h2("Pakistan Population Census"),
h4("About the Census Data"),
p("This dashboard allows you to explore datasets from the
Pakistan Population Census of 2017 and 2023.
Choose a dataset from the sidebar to generate tables and
graphs.")
),
# Introduction Page
tabItem(
tabName = "Intro",
h1("Pakistan Population Census"),
h2("Introduction")
),
# PakPC2023Basic Page
tabItem(tabName = "PakPC2023Basic",
h3("Pakistan Population Census 2023 (Basic)"),
p("This give the basic data on Area, population by sex, sex ratio, population density, urban proportion, household size and annual growth rate")
,
radioButtons(
"dataset2023basic",
h4("Area, population by sex, sex ratio, population density, urban proportion, household size and annual growth rate"),
choices = list(
"TABLE_01",
"TABLE_02",
"TABLE_03",
"TABLE_04",
"TABLE_05",
"TABLE_06",
"TABLE_07",
"TABLE_08",
"TABLE_09",
"TABLE_10",
"TABLE_11"
),
inline = TRUE
),
fluidRow(
box(
width = 12,
class = "custom-box",
tabBox(
width = 12,
tabPanel(
title = h3("Data"),
DT::DTOutput("Out2023Basic")
),
tabPanel(
title = h3("Analysis"),
rpivotTableOutput("Pivot2023Basic")
)
)
)
)
)
),
# Page for PakPC 2017 dataset selection
tabItem(tabName = "pakpc2017",
h3("Pakistan Population Census 2017"),
radioButtons(
"dataset2017",
h4("Choose Dataset"),
choices = list(
"PakPC2017Pak",
"PakPC2017Pakistan",
"PakPC2017Punjab",
"PakPC2017Sindh",
"PakPC2017KPK",
"PakPC2017Balochistan",
"PakPC2017FATA",
"PakPC2017Islamabad",
"PakPC2017Tehsil",
"PakPC2017City10"
),
inline = TRUE
),
fluidRow(
box(
width = 12,
class = "custom-box",
tabBox(
width = 12,
tabPanel(
title = h3("Data"),
DT::DTOutput("Out2017")
),
tabPanel(
title = h3("Analysis"),
rpivotTableOutput("Pivot2017")
)
)
)
)
)
)
)
server <- function(input, output, session) {
output$OutPakPC2023Pak <-
renderDT({
DT::datatable(
data    = PakPC2023Pak,
caption = htmltools::tags$caption(
style    = 'caption-side: top; text-align: center;',
'Table 1: ',
htmltools::em('Number of households, Population & Average Annual Population Growth Rate by Region & Area')
)
) %>%
formatCurrency(
columns  = c('Households', 'Pop2023', 'Pop2017'),
currency = "",
interval = 3,
mark     = ",",
digits   = 0
) %>%
formatCurrency(
columns  = c('AHS', 'GR'),
currency = "",
digits   = 2
)
})
output$OutPakPC2023PakDiv <-
renderDT({
DT::datatable(
data  = PakPC2023PakDiv
, caption = htmltools::tags$caption(
style = 'caption-side: top; text-align: center;',
'Table 2: ', htmltools::em('Number of households, Population & Average Annual Population Growth Rate by Region & Division')
)
) %>%
formatCurrency(
columns  = c('Households', 'Pop2023', 'Pop2017')
, currency = ""
, interval = 3
, mark     = ","
, digits   = 0
) %>%
formatCurrency(
columns  = c('AHS', 'GR')
, currency = ""
, digits   = 2
)
})
output$OutPakPC2023PakDist <-
renderDT({
DT::datatable(
data  = PakPC2023PakDist
, caption = htmltools::tags$caption(
style = 'caption-side: top; text-align: center;',
'Table 3: ', htmltools::em('Number of households, Population & Average Annual Population Growth Rate by Region & District')
)
) %>%
formatCurrency(
columns  = c('Households', 'Pop2023', 'Pop2017')
, currency = ""
, interval = 3
, mark     = ","
, digits   = 0
) %>%
formatCurrency(
columns  = c('AHS', 'GR')
, currency = ""
, digits   = 2
)
})
Data2023Basic <- reactive({
switch(input$dataset2023basic,
"TABLE_01"             = PakPC2023::TABLE_01 ,
"TABLE_02"             = PakPC2023::TABLE_02 ,
"TABLE_03"            = PakPC2023::TABLE_03 ,
"TABLE_04"            = PakPC2023::TABLE_04 ,
"TABLE_05"            = PakPC2023::TABLE_05 ,
"TABLE_06"            = PakPC2023::TABLE_06 ,
"TABLE_07"            = PakPC2023::TABLE_07 ,
"TABLE_08"            = PakPC2023::TABLE_08 ,
"TABLE_09"            = PakPC2023::TABLE_09 ,
"TABLE_10"            = PakPC2023::TABLE_10 ,
"TABLE_11"            = PakPC2023::TABLE_11 ,
)
})
output$Out2023Basic <-
renderDT({
DT::datatable(
data  = Data2023Basic()
, filter = c("none", "bottom", "top")[3]
, options = list(pageLength = 50, autoWidth = TRUE)
)
})
Data2017 <- reactive({
switch(input$dataset2017,
"PakPC2017Pak"         = PakPC2017::PakPC2017Pak,
"PakPC2017Pakistan"    = PakPC2017::PakPC2017Pakistan,
"PakPC2017Punjab"      = PakPC2017::PakPC2017Punjab,
"PakPC2017Sindh"       = PakPC2017::PakPC2017Sindh,
"PakPC2017KPK"         = PakPC2017::PakPC2017KPK,
"PakPC2017Balochistan" = PakPC2017::PakPC2017Balochistan,
"PakPC2017FATA"        = PakPC2017::PakPC2017FATA,
"PakPC2017Islamabad"   = PakPC2017::PakPC2017Islamabad,
"PakPC2017Tehsil"      = PakPC2017::PakPC2017Tehsil,
"PakPC2017City10"      = PakPC2017::PakPC2017City10
)
})
output$Out2017 <-
renderDT({
DT::datatable(
data  = Data2017()
, filter = c("none", "bottom", "top")[3]
, options = list(pageLength = 50, autoWidth = TRUE)
)
})
output$Pivot2017 <- renderRpivotTable({
rpivotTable(
data           = Data2017(),
rows           = c("AdminUnits"),
cols           = c("ResStatus"),
aggregatorName = "Sum",
vals           = "Pop2017",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
}
shinyApp(ui = ui, server = server)
